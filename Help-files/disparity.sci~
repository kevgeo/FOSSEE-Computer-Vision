// Computes disparity map using the semi-global block matching algorithm
//
// Calling Sequence
// disparitymat = disparity(I1,I2,numofDisparities,minDisparity,sadwindowsize,p1,p2,maxDiff,prefilterCap,uniquenessratio,speckleWindowSize,SpeckleRange,fullDP);
// 
// Parameters 
// Input
// I1 : First stereo image	
// I2 : Second stereo image
// numofDisparities : Maximum disparity minus minimum disparity
// minDisparity : Minimum possible disparity value
// sadwindowsize :  Matched blocked size
// p1 : First parameter controlling disparity smoothness
// p2 : Second parameter controlling disparity smoothness
// maxDiff : Maximum allowed difference value
// prefilterCap : Truncation value for the prefiltered image pixels
// uniquenessratio : Margin in percentage by which the best (minimum) computed cost function value should “win” the second best value to consider the 
// found match correct.
// speckleWindowSize : Maximum size of smooth disparity regions to consider their noise speckles and invalidate
// SpeckleRange : 
// fullDP : Maximum disparity variation within each connected component 
// Output
// disparitymat : Disparity map  
//
// Description
// The function computes disparity map using the semi-global block matching algorithm.
//
// Examples
// //Reading first stereo image
// I1 = imread("stereo1.png");
// //Reading second stereo image
// I2 = imread("stereo2.png");
// //Number of disparities
// numofDisparities = 144;
// //Minimum of disparity value
// minDisparity = 0;
// //Matched blocked size
// sadwindowsize = 3;
// //Get first parameter controlling disparity smoothness
// p1 = 36;
// //Get second parameter controlling disparity smoothness
// p2 = 288;
// //Get maximum allowed difference value
// maxDiff = 1;
// //Get prefilterCap value
// prefilterCap = 10;
// //Get unique ratio value
// uniquenessratio = 10;
// //Get speckle window size value 
// speckleWindowSize = 100;
// //Get speckle range value
// SpeckleRange = 32;
// //Get fullDp value
// fullDP = 1;
// disparitymat = disparity(I1,I2,numofDisparities,minDisparity,sadwindowsize,p1,p2,maxDiff,prefilterCap,uniquenessratio,speckleWindowSize,SpeckleRange,fullDP);
//
// Author
// Kevin George
// 
